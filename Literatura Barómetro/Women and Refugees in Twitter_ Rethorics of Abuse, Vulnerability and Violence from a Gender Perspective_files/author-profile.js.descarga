/*
 * The contents of this file are subject to the license and copyright
 * detailed in the LICENSE and NOTICE files at the root of the source
 * tree and available online at
 *
 * http://www.dspace.org/license/
 */
(function($) {

    $(document).ready(function() {
        initAddButtons();
        initRemoveButtons();
        initFileButtons();
           
        initAutocomplete();
        //enable the validation


        $('#aspect_authorprofile_administrative_EditAuthorProfileForm_div_author-profile-form').validate({
            showErrors: function(errorMap, errorList) {
                $.each( errorMap, function(key, value){
                    var row =  $('[name="' + key + '"]')
                    $(row).closest('.control-group').addClass('has-error');
                    if($(row).closest('.ds-form-item').prev().is('label')){
                        $(row).closest('.ds-form-item').prev().css('color','#a94442');
                        $(row).closest('.ds-form-item').find('button').css('border-color','#a94442');
                    }
                });
            }
        });

        $.validator.addMethod("regex",regexChck,provideMessage);

    });

    function provideMessage(e,k){
        return $(k).siblings('.invalid').text();
    }

    function regexChck(value,element){

        var exp;

        if($(element).parent().hasClass('ds-composite-component')){

            exp=$($(element).parent().parent().find('.ds-composite-component >  input[name*=regex]')[0]).attr('value');
        } else {
            exp=$($(element).siblings('.ds-hidden-field')[0]).attr('value');
        }

        var patt=new RegExp(exp);

        var testResult = patt.test(value);

        return testResult;
    }

    function lastId(divisionOfRows){
        var maxID=0;
        divisionOfRows.find('input').each(function(){
            var id=parseInt($(this).attr('id').substr($(this).attr('id').lastIndexOf('_')+1, $(this).attr('id').length));
            if(id>maxID){
                maxID=id;
            }
        })
        return maxID;
    }
    function enable_autocomplete(InputField) {

        var homeUrl=$('meta[name="home-path"]').attr('content');
        var choiceURL=homeUrl + "/choices/dc_subject_unesco";
        
        InputField.autocomplete({
                source: function(request, response) {
                    var reqUrl = choiceURL;
                    if(request && request.term) {
                        reqUrl += "?query=" + request.term;
                            }
                    $.get(reqUrl, function(xmldata) {
                        var options = [];
                        var authorities = [];
                        $(xmldata).find('Choice').each(function() {
                            // get value
                            var value = $(this).attr('value') ? $(this).attr('value').substr($(this).attr('value').indexOf(' ')+1) : null;
                            // get label, if empty set it to value
                            var label = $(this).text() ? $(this).text() : value;
                            // if value was empty but label was provided, set value to label
                            if(!value) {
                                value = label;
                            }
                            // if at this point either value or label == null, this means none of both were set and we shouldn't add it to the list of options
                            if (label != null) {
                                options.push({
                                    label: label,
                                    value: value
                                });
                                authorities['label: ' + label + ', value: ' + value] = $(this).attr('authority') ? $(this).attr('authority') : value;
                            }
                        });
                        InputField.data('authorities',authorities);
                        response(options);
                    });
                    }
        });
    }
    function initAddButtons() {
        $('button.author-profile-add').each(function(){
            initAddButton($(this));
        })
    }
function initAddButton(buttonField) {
        buttonField.click(function(e){
            
            e.preventDefault();
            var $this = $(this);
            var parentRow = $this.closest('.row');
            var lastInput = parentRow.find('input:last');
     
            var oldIndex = parseInt(lastInput.attr('id').substr(lastInput.attr('id').lastIndexOf('_')+1, lastInput.attr('id').length));
            var lastDivision = parentRow.siblings('.row').last().find('input:last');
            var lastIdentifier = lastDivision.attr('id');
            var lastIndex = lastId(parentRow.parent());//parseInt(lastIdentifier.substr(lastIdentifier.lastIndexOf('_')+1, lastIdentifier.length));
            //Add one to the index !
            var newIndex = lastIndex + 1;

            var newDivision = parentRow.clone(false);
              
            newDivision.find('input').each(function()
            {
                var $this = $(this);
                //Update the index of the name (if present)
                $this.attr('name', $this.attr('name').replace('_' + oldIndex, '_' + newIndex));
                $this.attr('id', $this.attr('id').replace('_' + oldIndex, '_' + newIndex));
              //ARVO: Le hacemos autocompletable
			  if("authorProfileAreaUnesco" == $this.attr('name').substr(0,$this.attr('name').lastIndexOf('_'))){
                    enable_autocomplete($(this));
			  }
            });
            newDivision.find('button.author-profile-remove').each(function(){
                initRemoveButton($(this));
            })
            newDivision.find('button.author-profile-add').each(function(){
                initAddButton($(this));
            })
            //Clear the values
            newDivision.find('input[type=text]').val('');

            newDivision.find('label').remove();

            newDivision.insertAfter(parentRow);
        }); 
    }
 function initAutocomplete() {
    $('input[name^="authorProfileAreaUnesco"]').each(function(){
		enable_autocomplete($(this));
    })
 }
    function initRemoveButtons() {
        $('button.author-profile-remove').each(function(){
            initRemoveButton($(this));
        })
    }
    function initRemoveButton(buttonField) {
        buttonField.click(function(e){
            e.preventDefault();
            var $this = $(this);
            //Check if we are the last of the rows !
            var divToRemove = $this.closest('.row');
            if(divToRemove.parent().find('.row').length == 1)
            {
                //Only one left, clear the values
                divToRemove.find('input[type="text"]').val('');
            }else{
                divToRemove.remove();
            }

        });
    }
    function initFileButtons(){
        var alterButtons = $('button[name^="submit_alter_file_"]');
        alterButtons.click(function(){
            var $this = $(this);
            showUploadFileBox($this.attr('id').substr($this.attr('id').lastIndexOf('_')+1, $this.attr('id').length));

            return false;
        });
        var removeButtonsImage = $('button[name^="submit_remove_file_authorProfileSingleImage"]');
        var removeButtonsPdf = $('button[name^="submit_remove_file_authorProfileSinglePdf"]');
        removeButtonsImage.click(function(){
            var $this = $(this);
            var fileId = $this.attr('id').substr($this.attr('id').lastIndexOf('_')+1, $this.attr('id').length);
            $('.author-pic').hide();
            $('button[name^="submit_alter_file_' + fileId + '"]').hide();
            $this.hide();
            showUploadFileBox(fileId);
            //Set a hidden button to remove the current file
            $('input[type="hidden"][name="remove_file_' + fileId + '"]').val('true');

            return false;
        });
        removeButtonsPdf.click(function(){
            var $this = $(this);
            var fileId = $this.attr('id').substr($this.attr('id').lastIndexOf('_')+1, $this.attr('id').length);
            $('button[name^="submit_alter_file_' + fileId + '"]').hide();
            $this.hide();
            showUploadFileBox(fileId);
            //Set a hidden button to remove the current file
            $('input[type="hidden"][name="remove_file_' + fileId + '"]').val('true');

            return false;
        });
    }

    function showUploadFileBox(name)
    {
        $('input[name="' + name + '"][type="file"]').attr("style", "display: inline !important; visibility: visible !important ");
    }

})(jQuery);
